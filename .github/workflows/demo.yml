name: Dispatch Trigger
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  workflow_dispatch:
    inputs:
      LogLevel:
        description: 'Log level'
        required: false
        default: 'INFO'
        type: choice
        options:
        - INFO
        - WARNING
        - DEBUG
      WorkSpaceSuffix:
        description: 'AWS Workspace Suffix'
        required: false
        type: string
      NumFeeds:
        description: 'Number of feeds to run'
        type: string
        default: '1'
      DisableTeardown:
        description: 'Disable teardown'
        required: false
        type: boolean
        default: true
      Environment:
        description: 'Environment to run tests against'
        required: true
        default: testing
        type: choice
        options:
          - staging
          - testing 
  push:
    branches: 
      - 'dev'
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Dispatch Context
        run: |
            echo "Log Level: $LEVEL"
            echo "DISABLE_TEARDOWN: $DISABLE_TEARDOWN"
            echo "Environment: $ENVIRONMENT"
        env: 
          LOG_LEVEL: ${{ inputs.LogLevel }}
          DISABLE_TEARDOWN: ${{ inputs.DisableTeardown }}
          WORKSPACE_SUFFIX: ${{ inputs.WorkSpaceSuffix }}
          NUM_FEEDS: ${{ inputs.NumFeeds }}
          ENVIRONMENT: ${{ inputs.Environment }}
        
